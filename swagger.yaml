openapi: 3.0.0
info:
  title: API de Productos TATSoft
  description: API para la gestión de productos y sus imágenes
  version: 1.0.0

servers:
  - url: http://localhost:10102
    description: Servidor local
  - url: https://backendproducts-eefufaaeaahzauee.eastus-01.azurewebsites.net
    description: Servidor de producción

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        nombre_producto:
          type: string
          minLength: 2
          maxLength: 120
          description: Nombre del producto
        precio:
          type: number
          description: Precio del producto
        descripcion:
          type: string
          maxLength: 255
          description: Descripción del producto
        cantidad_ingreso:
          type: integer
          description: Cantidad de productos en inventario
        id_imagen:
          type: string
          description: ID de la imagen del producto
    
    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensaje de error
        details:
          type: string
          description: Detalles adicionales del error

paths:
  /register-product:
    post:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Registrar un nuevo producto
      description: Crea un nuevo producto en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Producto registrado con éxito"
        '422':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /get-products:
    get:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Obtener todos los productos
      description: Retorna la lista de todos los productos
      responses:
        '200':
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /get-product/{id_producto}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Obtener un producto específico
      description: Retorna un producto por su ID
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto a buscar
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Producto encontrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /delete-product/{id_producto}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Eliminar un producto
      description: Elimina un producto por su ID
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Producto eliminado con éxito."
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor

  /update-product/{id_producto}:
    put:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Actualizar un producto
      description: Actualiza la información de un producto existente
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto a actualizar
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Ok, Producto actualizado con éxito."
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor

  /upload-image:
    post:
      tags:
        - Imágenes
      summary: Subir imagen de producto
      description: Sube una nueva imagen para un producto
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Archivo de imagen (max 6MB)
      responses:
        '201':
          description: Imagen subida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
        '400':
          description: Error en el formato o tamaño de la imagen
        '500':
          description: Error interno del servidor

  /get-image/{fileName}:
    get:
      tags:
        - Imágenes
      summary: Obtener imagen
      description: Obtiene una imagen por su nombre de archivo
      parameters:
        - name: fileName
          in: path
          required: true
          description: Nombre del archivo de imagen
          schema:
            type: string
      responses:
        '200':
          description: URL de la imagen generada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
        '404':
          description: Imagen no encontrada
        '500':
          description: Error interno del servidor

  /delete-image:
    delete:
      tags:
        - Imágenes
      summary: Eliminar imagen
      description: Elimina una imagen por su nombre de archivo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  description: Nombre del archivo a eliminar
      responses:
        '200':
          description: Imagen eliminada exitosamente
        '404':
          description: Imagen no encontrada
        '500':
          description: Error interno del servidor

  /api/products:
    get:
      tags:
        - Ruta para peticiones del microservicio preventa
      summary: Obtener productos por IDs
      description: Devuelve información de los productos con los IDs proporcionados en la query.
      parameters:
        - name: ids
          in: query
          description: Lista de IDs de productos separados por comas.
          required: true
          schema:
            type: string
            example: "1,2,3"
      responses:
        "200":
          description: Lista de productos encontrados.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id_producto:
                      type: integer
                      example: 1
                    nombre_producto:
                      type: string
                      example: "Laptop Dell Inspiron"
                    precio:
                      type: number
                      format: float
                      example: 1200.50
        "400":
          description: Parámetro `ids` inválido o faltante.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "IDs must be a string"
        "404":
          description: No se encontraron productos con los IDs proporcionados.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No products found for the provided IDs"
        "500":
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"
                  details:
                    type: string
                    example: "Error message details"

  /api/products/actualizar-cantidad/{id_producto}/{cantidad}:
    put:
      tags:
        - Microservicio Preventa
      summary: Actualizar cantidad de producto
      description: Actualiza la cantidad disponible de un producto
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto
          schema:
            type: integer
        - name: cantidad
          in: path
          required: true
          description: Nueva cantidad
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Cantidad actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Cantidad actualizada correctamente"
        '400':
          description: Cantidad inválida
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor