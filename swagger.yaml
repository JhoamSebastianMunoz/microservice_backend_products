openapi: 3.0.0
info:
  title: API de Productos TATSoft
  description: API para la gestión de productos y sus imágenes
  version: 1.0.0

servers:
  - url: http://localhost:10104
    description: Servidor local
  - url: https://backendproducts-eefufaaeaahzauee.eastus-01.azurewebsites.net
    description: Servidor de producción

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        nombre_producto:
          type: string
          minLength: 2
          maxLength: 120
          description: Nombre del producto
        precio:
          type: number
          description: Precio del producto
        descripcion:
          type: string
          maxLength: 255
          description: Descripción del producto
        cantidad_ingreso:
          type: integer
          description: Cantidad de productos en inventario
        id_imagen:
          type: string
          description: ID de la imagen del producto
        id_categoria:
          type: numbre
          description: ID de la categoria del producto

    Categoria:
      type: object
      properties:
        id_categoria:
          type: integer
          description: ID único de la categoría
          example: 1
        nombre_categoria:
          type: string
          description: Nombre de la categoría
          example: "Cárnicos"
        descripcion:
          type: string
          description: Descripción detallada de la categoría
          example: "Productos de origen animal"
        fecha_creacion:
          type: string
          format: date-time
          description: Fecha y hora de creación de la categoría
          example: "2025-03-10T15:30:00Z"
    
    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensaje de error
        details:
          type: string
          description: Detalles adicionales del error
paths:
  /register-product:
    post:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Registrar un nuevo producto
      description: Crea un nuevo producto en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Producto registrado con éxito"
        '422':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /get-products:
    get:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Obtener todos los productos
      description: Retorna la lista de todos los productos
      responses:
        '200':
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /get-product/{id_producto}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Obtener un producto específico
      description: Retorna un producto por su ID
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto a buscar
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Producto encontrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /delete-product/{id_producto}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Eliminar un producto
      description: Elimina un producto por su ID
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Producto eliminado con éxito."
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor

  /update-product/{id_producto}:
    put:
      security:
        - bearerAuth: []
      tags:
        - Productos
      summary: Actualizar un producto
      description: Actualiza la información de un producto existente
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto a actualizar
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
                  description: Nombre del producto
                  example: "Laptop Gamer"
                precio:
                  type: number
                  format: float
                  description: Precio del producto
                  example: 2500.00
                descripcion:
                  type: string
                  description: Descripción detallada del producto
                  example: "Laptop de alto rendimiento para videojuegos"
                id_categoria:
                  type: integer
                  description: ID de la categoría a la que pertenece el producto
                  example: 3
                id_imagen:
                  type: integer
                  description: ID de la imagen asociada al producto
                  example: 7
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Ok, Producto actualizado con éxito."
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor

  /upload-image:
    post:
      tags:
        - Imágenes
      summary: Subir imagen de producto
      description: Sube una nueva imagen para un producto
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Archivo de imagen (max 6MB)
      responses:
        '201':
          description: Imagen subida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
        '400':
          description: Error en el formato o tamaño de la imagen
        '500':
          description: Error interno del servidor

  /get-image/{fileName}:
    get:
      tags:
        - Imágenes
      summary: Obtener imagen
      description: Obtiene una imagen por su nombre de archivo
      parameters:
        - name: fileName
          in: path
          required: true
          description: Nombre del archivo de imagen
          schema:
            type: string
      responses:
        '200':
          description: URL de la imagen generada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
        '404':
          description: Imagen no encontrada
        '500':
          description: Error interno del servidor

  /delete-image:
    delete:
      tags:
        - Imágenes
      summary: Eliminar imagen
      description: Elimina una imagen por su nombre de archivo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  description: Nombre del archivo a eliminar
      responses:
        '200':
          description: Imagen eliminada exitosamente
        '404':
          description: Imagen no encontrada
        '500':
          description: Error interno del servidor

  /api/products:
    get:
      tags:
        - Ruta para peticiones del microservicio preventa
      summary: Obtener productos por IDs
      description: Devuelve información de los productos con los IDs proporcionados en la query.
      parameters:
        - name: ids
          in: query
          description: Lista de IDs de productos separados por comas.
          required: true
          schema:
            type: string
            example: "1,2,3"
      responses:
        "200":
          description: Lista de productos encontrados.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id_producto:
                      type: integer
                      example: 1
                    nombre_producto:
                      type: string
                      example: "Laptop Dell Inspiron"
                    precio:
                      type: number
                      format: float
                      example: 1200.50
        "400":
          description: Parámetro `ids` inválido o faltante.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "IDs must be a string"
        "404":
          description: No se encontraron productos con los IDs proporcionados.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No products found for the provided IDs"
        "500":
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"
                  details:
                    type: string
                    example: "Error message details"

  /api/products/actualizar-cantidad/{id_producto}/{cantidad}:
    put:
      tags:
        - Microservicio Preventa
      summary: Actualizar cantidad de producto
      description: Actualiza la cantidad disponible de un producto
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto
          schema:
            type: integer
        - name: cantidad
          in: path
          required: true
          description: Nueva cantidad
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Cantidad actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Cantidad actualizada correctamente"
        '400':
          description: Cantidad inválida
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor


  /register-stock/{id_producto}:
    post:
      security:
        - bearerAuth: []
      tags:
        - Inventario
      summary: Registrar ingreso de stock
      description: Registra un nuevo ingreso de stock para un producto específico
      parameters:
        - name: id_producto
          in: path
          required: true
          description: ID del producto al que se le registrará el stock
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cantidad_ingresada
                - codigo_factura
                - costo_total
                - costo_unitario
                - porcentaje_venta
              properties:
                cantidad_ingresada:
                  type: integer
                  description: Cantidad de unidades ingresadas
                  minimum: 1
                fecha_vencimiento:
                  type: string
                  format: date
                  description: Fecha de vencimiento del producto (opcional)
                codigo_factura:
                  type: string
                  description: Código o número de factura
                costo_total:
                  type: number
                  format: double
                  description: Costo total del ingreso
                costo_unitario:
                  type: number
                  format: double
                  description: Costo unitario del producto
                porcentaje_venta:
                  type: number
                  format: double
                  description: Porcentaje de margen de venta
      responses:
        '201':
          description: Stock registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Stock registrado con éxito"
        '400':
          description: Datos faltantes o inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Faltan datos requeridos"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /get-hitoricalStock:
    get:
      security:
        - bearerAuth: []
      tags:
        - Inventario
      summary: Obtener historial de ingresos de stock
      description: Retorna el historial completo de todos los ingresos de stock
      responses:
        '200':
          description: Historial de stock obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id_registro:
                      type: integer
                      example: 1
                    id_producto:
                      type: integer
                      example: 3
                    nombre_producto:
                      type: string
                      example: "Chorizo Santarrosano"
                    cantidad_ingresada:
                      type: integer
                      example: 50
                    id_usuario:
                      type: integer
                      example: 1
                    nombre_usuario:
                      type: string
                      example: "Admin Sistema"
                    fecha_ingreso:
                      type: string
                      format: date-time
                      example: "2025-03-07T15:30:00Z"
                    fecha_vencimiento:
                      type: string
                      format: date
                      example: "2025-06-15"
                    codigo_factura:
                      type: string
                      example: "FAC-2025-001"
                    costo_total:
                      type: number
                      format: double
                      example: 250000.00
                    costo_unitario:
                      type: number
                      format: double
                      example: 5000.00
                    porcentaje_venta:
                      type: number
                      format: double
                      example: 20.00
        '404':
          description: No se encontraron registros
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No hay registros de stock"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /get-detailsStock/{id_registro}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Inventario
      summary: Obtener detalle de un ingreso de stock
      description: Retorna los detalles completos de un ingreso de stock específico
      parameters:
        - name: id_registro
          in: path
          required: true
          description: ID del registro de stock a consultar
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Detalle de ingreso obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_registro:
                    type: integer
                    example: 1
                  id_producto:
                    type: integer
                    example: 3
                  nombre_producto:
                    type: string
                    example: "Chorizo Santarrosano"
                  cantidad_ingresada:
                    type: integer
                    example: 50
                  id_usuario:
                    type: integer
                    example: 1
                  nombre_usuario:
                    type: string
                    example: "Admin Sistema"
                  fecha_ingreso:
                    type: string
                    format: date-time
                    example: "2025-03-07T15:30:00Z"
                  fecha_vencimiento:
                    type: string
                    format: date
                    example: "2025-06-15"
                  codigo_factura:
                    type: string
                    example: "FAC-2025-001"
                  costo_total:
                    type: number
                    format: double
                    example: 250000.00
                  costo_unitario:
                    type: number
                    format: double
                    example: 5000.00
                  porcentaje_venta:
                    type: number
                    format: double
                    example: 20.00
                  precio_calculado:
                    type: number
                    format: double
                    example: 6000.00
        '400':
          description: ID de registro inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "El id_registro debe ser un número válido"
        '404':
          description: Registro no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No se encontró el registro solicitado"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /register-category:
    post:
      security:
        - bearerAuth: []
      tags:
        - Categorías
      summary: Registrar una nueva categoría
      description: Crea una nueva categoría de productos en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre_categoria
              properties:
                nombre_categoria:
                  type: string
                  minLength: 2
                  maxLength: 100
                  description: Nombre de la categoría
                descripcion:
                  type: string
                  maxLength: 255
                  description: Descripción de la categoría (opcional)
      responses:
        '201':
          description: Categoría registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Categoria registrado con éxito"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /getAll-category:
    get:
      security:
        - bearerAuth: []
      tags:
        - Categorías
      summary: Obtener todas las categorías
      description: Retorna la lista de todas las categorías de productos
      responses:
        '200':
          description: Lista de categorías obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /getById-category/{id_categoria}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Categorías
      summary: Obtener una categoría específica
      description: Retorna una categoría por su ID
      parameters:
        - name: id_categoria
          in: path
          required: true
          description: ID de la categoría a buscar
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Categoría encontrada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
        '404':
          description: Categoría no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Categoria no encontrada"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /update-category/{id_categoria}:
    put:
      security:
        - bearerAuth: []
      tags:
        - Categorías
      summary: Actualizar una categoría
      description: Actualiza la información de una categoría existente
      parameters:
        - name: id_categoria
          in: path
          required: true
          description: ID de la categoría a actualizar
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre_categoria
              properties:
                nombre_categoria:
                  type: string
                  minLength: 2
                  maxLength: 100
                  description: Nuevo nombre de la categoría
                descripcion:
                  type: string
                  maxLength: 255
                  description: Nueva descripción de la categoría (opcional)
      responses:
        '200':
          description: Categoría actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Ok, Categoria actualizado con éxito."
        '404':
          description: Categoría no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Categoria no encontrada."
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /delete_category/{id_categoria}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - Categorías
      summary: Eliminar una categoría
      description: Elimina una categoría por su ID
      parameters:
        - name: id_categoria
          in: path
          required: true
          description: ID de la categoría a eliminar
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Categoría eliminada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Categoria eliminada con éxito."
        '404':
          description: Categoría no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Categoria no encontrada."
        '409':
          description: No se puede eliminar debido a referencias existentes
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No se puede eliminar la Categoria debido a referencias existentes en otros registros."
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /estadisticasStockBajo:
    get:
      security:
        - bearerAuth: []
      tags:
        - Reportes
      summary: Obtener productos con stock bajo
      description: Retorna la lista de productos cuya cantidad en inventario está por debajo del umbral especificado
      parameters:
        - name: umbral
          in: query
          required: false
          description: Cantidad mínima para considerar un producto con stock bajo (por defecto 15)
          schema:
            type: integer
            minimum: 1
            default: 15
          example: 10
      responses:
        '200':
          description: Lista de productos con stock bajo obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id_producto:
                      type: integer
                      description: ID del producto
                      example: 3
                    nombre_producto:
                      type: string
                      description: Nombre del producto
                      example: "Queso Mozzarella"
                    cantidad_ingreso:
                      type: integer
                      description: Cantidad actual en inventario
                      example: 8
                    precio:
                      type: number
                      format: float
                      description: Precio del producto
                      example: 12500.00
                    id_categoria:
                      type: integer
                      description: ID de la categoría
                      example: 2
                    nombre_categoria:
                      type: string
                      description: Nombre de la categoría
                      example: "Lácteos"
        '404':
          description: No se encontraron productos con stock bajo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No hay productos con stock menor a 15"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno del servidor"
                  details:
                    type: string
                    example: "Error al consultar la base de datos"